     1 00000000                                 ;---------------------------------------------
     2 00000000                                 ;文件名：OsHead.nas
     3 00000000                                 ;author:浅握双手
     4 00000000                                 ;时间：2015-9-19
     5 00000000                                 ;功能描述：系统启动 的前期处理程序
     6 00000000                                 ;---------------------------------------------
     7  = 00280000                              BOTPAK	EQU		0x00280000		; 内核代码段基址
     8  = 00100000                              DSKCAC	EQU		0x00100000		; boot.bin的512B将被移动到该地址处 (1M)
     9  = 00008000                              DSKCAC0	EQU		0x00008000		; 映像文件 加载到内存 的起始地址（第二扇区）
    10 00000000                                 
    11  = 00000FF0                              CYLS	EQU		0x0FF0
    12  = 00000FF1                              LEDS	EQU		0X0FF1
    13  = 00000FF2                              VMODE	EQU		0X0FF2
    14  = 00000FF4                              SCRNX	EQU		0X0FF4
    15  = 00000FF6                              SCRNY	EQU		0X0FF6
    16  = 00000FF8                              VRAM	EQU		0X0FF8
    17 00000000                                 ;---------------------------------------------
    18                                          	ORG		0xc200
    19 0000C200                                 	
    20 0000C200 B0 13                           	MOV AL,0X13
    21 0000C202 B4 00                           	MOV	AH,0X00
    22 0000C204 CD 10                           	INT	0X10
    23 0000C206                                 	
    24 0000C206 C6 06 0FF2 08                   	MOV	BYTE[VMODE],8	;8位彩色
    25 0000C20B C7 06 0FF4 0140                 	MOV	WORD[SCRNX],320
    26 0000C211 C7 06 0FF6 00C8                 	MOV WORD[SCRNY],200
    27 0000C217 66 C7 06 0FF8 000A0000          	MOV	DWORD[VRAM],0X000A0000	;VGA显卡，320*200*8位彩色，显存地址
    28 0000C220                                 	
    29 0000C220 B4 02                           	MOV	AH,0X02
    30 0000C222 CD 16                           	INT 0X16
    31 0000C224 A2 0FF1                         	MOV	[LEDS],AL		;保存键盘led灯状态
    32 0000C227                                 	
    33 0000C227                                 ;---------------------------------------------	
    34 0000C227                                 ;这里关闭所有中断
    35 0000C227 B0 FF                           	MOV AL,0XFF
    36 0000C229 E6 21                           	OUT	0X21,AL			;屏蔽主pic 中断
    37 0000C22B 90                              	NOP					;连续out，有可能出错
    38 0000C22C E6 A1                           	OUT	0Xa1,AL			;屏蔽从pic 终端
    39 0000C22E                                 	
    40 0000C22E FA                              	CLI					;禁止CPU级别中断
    41 0000C22F                                 	
    42 0000C22F                                 ;---------------------------------------------	
    43 0000C22F                                 ;打开A20地址总线,以便CPU访问1MB以上内存
    44 0000C22F E8 00B8                         	CALL	waitkbdout	; 清空i8042的输入缓冲区
    45 0000C232 B0 D1                           	MOV		AL,0XD1
    46 0000C234 E6 64                           	OUT		0X64,AL
    47 0000C236 E8 00B1                         	CALL	waitkbdout
    48 0000C239                                 	
    49 0000C239 B0 DF                           	MOV		AL,0xdf			;开启A20总线
    50 0000C23B E6 60                           	OUT		0X60,AL
    51 0000C23D E8 00AA                         	CALL	waitkbdout
    52 0000C240                                 	
    53 0000C240                                 	
    54 0000C240                                 ;---------------------------------------------		
    55 0000C240                                 [INSTRSET "i486p"]			;使用486指令集
    56 0000C240 0F 01 16 C322                   	LGDT	[GDTR0]			; 加载GDTR寄存器，临时设置
    57 0000C245 0F 20 C0                        	MOV		EAX,CR0
    58 0000C248 66 25 7FFFFFFF                  	AND		EAX,0X7fffffff	;禁止分页模式
    59 0000C24E 66 83 C8 01                     	OR		EAX,0X00000001	;开启保护模式
    60 0000C252 0F 22 C0                        	MOV		CR0,EAX
    61 0000C255                                 	
    62 0000C255 EB 00                           	JMP		protectMode		;切换到保护模式，指令解释变化，必须立马跳转
    63 0000C257                                 	
    64 0000C257                                 ;---------------------------------------------	
    65 0000C257                                 ;进入保护模式	
    66 0000C257                                 protectMode:
    67 0000C257 B8 0008                         	MOV		AX,1*8			; 重新设置段寄存器
    68 0000C25A 8E D8                           	MOV		DS,AX			; DS, ES, FS, GS, SS都指向GDT中的内核数据段描述符
    69 0000C25C 8E C0                           	MOV		ES,AX
    70 0000C25E 8E E0                           	MOV		FS,AX
    71 0000C260 8E E8                           	MOV		GS,AX
    72 0000C262 8E D0                           	MOV		SS,AX
    73 0000C264                                 	
    74 0000C264                                 ;----------------------------------------------
    75 0000C264                                 ; 将该文件之后的512KB内容(内核代码)复制到0x00280000处
    76 0000C264                                 
    77 0000C264                                 ; 将DS:ESI指向的512KB的内容复制到ES:EDI指向的内存单元
    78 0000C264                                 ; DS:ESI = 8:该文件随后的位置
    79 0000C264                                 ; ES:EDI = 8:0x00280000 (内核代码段的基地址是0x00280000)
    80 0000C264                                 
    81 0000C264 66 BE 0000C330                  	MOV		ESI,bootpack	;源地址
    82 0000C26A 66 BF 00280000                  	MOV		EDI,BOTPAK		;目的地址
    83 0000C270 66 B9 00020000                  	MOV		ECX,512*1024/4	;复制的大小，512K
    84 0000C276 E8 0078                         	CALL	memcpy	
    85 0000C279                                 ;----------------------------------------------
    86 0000C279                                 ;将启动扇区的代码复制到0x00100000处 (1M)
    87 0000C279 66 BE 00007C00                  	MOV		ESI,0x7c00		
    88 0000C27F 66 BF 00100000                  	MOV		EDI,DSKCAC		
    89 0000C285 66 B9 00000080                  	MOV		ECX,512/4
    90 0000C28B E8 0063                         	CALL	memcpy
    91 0000C28E                                 
    92 0000C28E                                 ;----------------------------------------------
    93 0000C28E                                 ;将从映像中读入的数据从0x8200处复制到0x00100200处
    94 0000C28E 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; ESI = 0x8200
    95 0000C294 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; EDI = 0x00100200
    96 0000C29A 66 B9 00000000                  		MOV		ECX,0
    97 0000C2A0 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]	; CL = 共读入的柱面数
    98 0000C2A4 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; 一共要复制的次数
    99 0000C2AB 66 81 E9 00000080               		SUB		ECX,512/4		; 减去(启动扇区的字节数/4)
   100 0000C2B2 E8 003C                         		CALL	memcpy
   101 0000C2B5                                 		
   102 0000C2B5                                 ;----------------------------------------------
   103 0000C2B5                                 ;内核的启动
   104 0000C2B5 66 BB 00280000                  	MOV		EBX,BOTPAK		; EBX = 0x00280000
   105 0000C2BB 67 66 8B 4B 10                  	MOV		ECX,[EBX+16]	; ECX = 0x11a8
   106 0000C2C0 66 83 C1 03                     	ADD		ECX,3			; ECX += 3;
   107 0000C2C4 66 C1 E9 02                     	SHR		ECX,2			; ECX /= 4;
   108 0000C2C8 74 10                           	JZ		skip			; 没有要传送的数据时
   109 0000C2CA                                 	
   110 0000C2CA 67 66 8B 73 14                  	MOV		ESI,[EBX+20]	; 复制的源地址(相对于bootoack.hrb头部的偏移) ESI = 0x10c8
   111 0000C2CF 66 01 DE                        	ADD		ESI,EBX			; 换算出要复制的数据的实际物理地址
   112 0000C2D2 67 66 8B 7B 0C                  	MOV		EDI,[EBX+12]	; 复制的目的地址	EDI = 0x310000
   113 0000C2D7 E8 0017                         	CALL	memcpy
   114 0000C2DA                                 skip:
   115 0000C2DA 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; 栈初始值	ESP = 0x310000
   116 0000C2DF 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   117 0000C2E7                                 		
   118 0000C2E7                                 fin:
   119 0000C2E7 F4                              	HLT
   120 0000C2E8 EB FD                           	JMP		fin
   121 0000C2EA                                 ;---------------------------------------------	
   122 0000C2EA                                 waitkbdout:						
   123 0000C2EA E4 64                           	IN	AL,0x64			; 从0x64端口读取数据
   124 0000C2EC 24 02                           	AND	AL,0x02			; 测试i8042输入缓冲区是否为空
   125 0000C2EE 75 FA                           	JNZ	waitkbdout		; 若不为空 则继续读取 直到输入缓冲区为空为止
   126 0000C2F0 C3                              	RET					; 为空 则返回	
   127 0000C2F1                                 	
   128 0000C2F1                                 ;----------------------------------------------------------------------	
   129 0000C2F1                                 ; 该函数将DS:ESI指向的内存单元的内容复制到ES:EDI指向的内存单元
   130 0000C2F1                                 ; 每次复制4个字节
   131 0000C2F1                                 memcpy:
   132 0000C2F1 67 66 8B 06                     	MOV		EAX,[ESI]		
   133 0000C2F5 66 83 C6 04                     	ADD		ESI,4
   134 0000C2F9 67 66 89 07                     	MOV		[EDI],EAX
   135 0000C2FD 66 83 C7 04                     	ADD		EDI,4
   136 0000C301 66 83 E9 01                     	SUB		ECX,1
   137 0000C305 75 EA                           	JNZ		memcpy			
   138 0000C307 C3                              	RET	
   139 0000C308                                 	
   140 0000C308                                 ;---------------------------------------------		
   141 0000C308                                 GDT0:
   142 0000C308 00 00 00 00 00 00 00 00         	RESB	8						;空描述符
   143 0000C310 FFFF 0000 9200 00CF             	DW	0xffff,0x0000,0x9200,0x00cf	;32位可读写数据段描述符	段限长 4G-1，段基址为0  	
   144 0000C318                                 					 				;也就是说该段可寻址0~4G-1	DPL = 0 内核数据段
   145 0000C318 FFFF 0000 9A28 0047             	DW	0xffff,0x0000,0x9a28,0x0047	;32位可读可执行代码段描述符	段限长512KB，段基址为0x280000
   146 0000C320                                 									;DPL = 0	内核代码段
   147 0000C320                                 
   148 0000C320 0000                            	DW		0
   149 0000C322                                 	
   150 0000C322                                 GDTR0:										
   151 0000C322 0017                            	DW	8*3-1						; GDT限长
   152 0000C324 0000C308                        	DD	GDT0						; GDT基址
   153 0000C328 00 00 00 00 00 00 00 00         	ALIGNB	16
   154 0000C330                                 	
   155 0000C330                                 bootpack:
   156 0000C330                                 ;后面是内核	
